---
import Base from "../layouts/Base.astro";
import PostCard from "../components/PostCard.astro";
import { getCollection } from "astro:content";

const pageTitle = "Meaning Alignment Institute";

// Get blog posts from the writing collection
const allPosts = await getCollection("writing");

// Get people data from the people collection
const allPeople = await getCollection("people");

// Group people by category
const researchPeople = allPeople.filter((person) => person.data.category === "research");
const coreTeam = allPeople.filter((person) => person.data.category === "core");
const advisors = allPeople.filter((person) => person.data.category === "advisor");

// Sort posts by publication date (newest first)
const sortedPosts = allPosts.sort((a, b) => {
  const dateA = new Date(a.id.substring(0, 6));
  const dateB = new Date(b.id.substring(0, 6));
  return dateB.getTime() - dateA.getTime();
});

// Filter featured posts and non-featured posts
const pinnedPosts = sortedPosts.filter((post) => post.data.featured === true);
const remainingPosts = sortedPosts.filter((post) => !post.data.featured);
---

<style>
  header {
    padding: 4rem;
  }
  .content-grid section {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 2rem;
    padding: 4rem 4rem 0 4rem;
    margin-bottom: 6rem;
    align-items: baseline;
    border-top: solid 1px var(--fallback-txt-color-faded);
  }

  @media (prefers-color-scheme: dark) {
    .content-grid section {
      border-top: solid 1px var(--fallback-txt-color-dark-faded);
    }
  }

  /* Special case for Research and Writing section */
  .content-grid section:first-of-type {
    align-items: end;
  }

  .section-header {
    margin: 0;
    align-self: flex-start;
  }

  /* Ensure section header stays at top even in first section */
  .content-grid section:first-of-type .section-header {
    align-self: flex-start;
  }

  .section-content {
    margin: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
  }

  .section-content h3 {
    margin: 2.22rem 0 0.5rem 0;
    font-size: 1em;
    font-weight: normal;
  }

  .section-content p {
    margin: 0 0 1rem 0;
  }

  .two-column {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }

  @media screen and (max-width: 768px) {
    .content-grid section,
    .content-grid section:first-of-type {
      grid-template-columns: 1fr;
      align-items: baseline;
    }

    .section-header {
      margin-bottom: 0.5rem;
    }

    .two-column {
      grid-template-columns: 1fr;
    }
  }

  .post-scroll {
    grid-column: 1 / -1;
    display: flex;
    gap: 1.11rem;
    overflow-y: visible;
    position: relative;
    width: 100%;
    /* Create scrolling without visual cutoff */
    overflow-x: scroll;
    scrollbar-width: none;
    -ms-overflow-style: none;
    mask-image: linear-gradient(to right, black 75%, rgba(0, 0, 0, 0.8) 85%, rgba(0, 0, 0, 0.4) 95%, transparent 100%);
    -webkit-mask-image: linear-gradient(to right, black 75%, rgba(0, 0, 0, 0.8) 85%, rgba(0, 0, 0, 0.4) 95%, transparent 100%);
  }

  .post-scroll:after {
    content: "";
    padding-right: 50px;
  }

  .post-scroll::-webkit-scrollbar {
    display: none;
  }

  /* Remove hidden overflow from parent containers */
  body,
  html,
  .content-grid {
    overflow: visible;
  }

  /* Allow section to visually extend beyond boundaries */
  section {
    overflow: visible;
  }

  .people-list {
    list-style-type: none;
    padding: 0;
    margin: 0 0 var(--space-standard) 0;
  }

  .people-list li {
    position: relative;
    margin-bottom: calc(var(--space-standard) / 3);
    cursor: pointer;
  }

  /* Add specific styling for research network list */
  .research-network {
    display: block;
    margin-bottom: var(--space-standard);
  }

  .research-network li {
    display: inline;
  }

  .research-network li:after {
    content: ", ";
  }

  .research-network li:last-child:after {
    content: "";
  }

  /* Add specific styling for locations list */
  .locations-list {
    opacity: 0.55;
    list-style-type: none;
    padding: 0;
    margin: 2.22rem 0 0 0;
  }

  .locations-list li {
    margin-bottom: calc(var(--space-standard) / 3);
  }

  /* Special case for Research and Writing section content */
  .content-grid section:first-of-type .section-content p {
    margin: 0;
  }

  .content-grid section:first-of-type .section-content {
    margin: 0;
    padding: 0;
  }

  /* Remove top margin from first h3 in Contact section */
  .content-grid section:last-of-type .section-content h3:first-of-type {
    margin-top: 0;
  }

  /* Hover info square styles */
  .hover-info-square {
    position: fixed;
    bottom: 20px;
    left: 20px;
    width: 300px;
    height: 300px;
    background-color: var(--fallback-bg-color);
    border: 1px solid var(--fallback-txt-color-faded);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 20px;
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 256ms ease-in,
      visibility 0s 256ms;
    z-index: 1000;
    overflow: auto;
    pointer-events: none;
  }

  #hoverPortrait {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 50%;
    margin-bottom: 10px;
  }

  .hover-info-content {
    text-align: center;
    width: 100%;
  }

  #hoverName {
    font-size: 1.5rem;
    margin: 0 0 5px 0;
  }

  #hoverRole {
    font-size: 1rem;
    opacity: 0.8;
    margin: 0 0 10px 0;
  }

  #hoverBio {
    font-size: 0.9rem;
    line-height: 1.4;
    max-height: 120px;
    overflow-y: auto;
    margin: 0;
  }

  @media (prefers-color-scheme: dark) {
    .hover-info-square {
      background-color: var(--fallback-bg-color-dark);
      border: 1px solid var(--fallback-txt-color-dark-faded);
    }
  }

  .hover-info-square.active {
    opacity: 1;
    visibility: visible;
    transition:
      opacity 256ms ease-in,
      visibility 0s;
  }

  .hover-info-square.fade-out {
    opacity: 0;
    transition:
      opacity 128ms ease-out,
      visibility 0s 128ms;
  }
</style>

<Base pageTitle={pageTitle}>
  <header>
    <p>
      <a href="/">Meaning Alignment Institute</a>
    </p>
    <h1>AI, markets, and democracies aligned with what truly matters.</h1>
  </header>

  <div class="content-grid">
    <section>
      <h2 class="section-header">Research and Writing</h2>
      <div class="section-content">
        <p>
          Stay up to date, subscribe on <a href="https://meaningalignment.substack.com">Substack</a>.
        </p>
      </div>
      <div class="post-scroll">
        {pinnedPosts.map((post) => <PostCard imageUrl={post.data.coverImg || "/src/assets/covers/full-stack-alignment.png"} title={post.data.title} category="Pinned" url={`/writing/${post.id}/`} featured={true} />)}
        {remainingPosts.map((post) => <PostCard imageUrl={post.data.coverImg || "/src/assets/covers/full-stack-alignment.png"} title={post.data.title} category={post.data.description} url={`/writing/${post.id}/`} />)}
      </div>
    </section>

    <section>
      <h2 class="section-header">About</h2>
      <div class="section-content">
        <p>
          The Meaning Alignment Institute aligns AI, markets, and democracies with what makes life meaningful — we call <a href="/writing/full-stack-alignment">Full-Stack Alignment</a>.
        </p>
        <p>
          Collaborating with 30+ experts, we advance Full-Stack Alignment from theory to practice. We're a non-profit supported by ARIA, <a href="https://openai.com">OpenAI</a>, <a href="https://survivalandflourishing.fund">SFF</a>, and others.
        </p>
        <p>
          Want to help? Reach us at <a href="mailto:hello@meaningalignment.org">hello@meaningalignment.org</a>
        </p>

        <h3>Research Network</h3>
        <ul class="people-list research-network">
          {researchPeople.map((person) => <li data-person-id={person.id}>{person.data.name}</li>)}
          {/* Fallback for any missing people in the data */}
          {
            researchPeople.length === 0 && (
              <>
                <li>Davidad</li>
                <li>Serena Booth</li>
                <li>Michiel Bakker</li>
                <li>Shengwu Li</li>
                <li>Ariel Procaccia</li>
                <li>Micah Carroll</li>
                <li>Wes Holliday</li>
                <li>Vince Conitzer</li>
                <li>Paul Gölz</li>
                <li>MH Tessler</li>
                <li>Rachel Calcott</li>
                <li>Ivan Vendrov</li>
                <li>Joel Lehman</li>
                <li>Peli Grietzer</li>
                <li>Rachel Calcott</li>
                <li>Andreas Haupt</li>
                <li>Andrew Koh</li>
                <li>Matija Franklin</li>
                <li>Zoë Hitzig</li>
                <li>Philipp Koralus</li>
                <li>Ruth Chang</li>
              </>
            )
          }
        </ul>

        <div class="two-column">
          <div>
            <h3>Core Team</h3>
            <ul class="people-list core-team">
              {coreTeam.map((person) => <li data-person-id={person.id}>{person.data.name}</li>)}
              {/* Fallback for any missing people in the data */}
              {
                coreTeam.length === 0 && (
                  <>
                    <li>Ellie Hain</li>
                    <li>Joe Edelman</li>
                    <li>Oliver Klingefjord</li>
                    <li>Ryan Lowe</li>
                  </>
                )
              }
            </ul>
          </div>
          <div>
            <h3>Advisors</h3>
            <ul class="people-list advisors">
              {advisors.map((person) => <li data-person-id={person.id}>{person.data.name}</li>)}
              {/* Fallback for any missing people in the data */}
              {
                advisors.length === 0 && (
                  <>
                    <li>Peter Wang</li>
                    <li>Aviv Ovayada</li>
                    <li>Brian Christian</li>
                    <li>Liv Boeree</li>
                  </>
                )
              }
            </ul>
          </div>
        </div>
      </div>
    </section>

    <section>
      <h2 class="section-header">Contact</h2>
      <div class="section-content">
        <h3>Interested in collaborating with us?</h3>
        <p>
          <a href="mailto:research@meaningalignment.org">research@meaningalignment.org</a>
        </p>

        <h3>General Inquiry</h3>
        <p>
          <a href="mailto:hello@meaningalignment.org">hello@meaningalignment.org</a>
        </p>

        <h3>Follow us elsewhere</h3>
        <p>
          <a href="https://meaningalignment.substack.com">Substack</a><br />
          <a href="https://x.com/meaningaligned">X</a>
        </p>

        <ul class="locations-list">
          <li>Berlin, Germany</li>
          <li>San Francisco, United States</li>
        </ul>
      </div>
    </section>
  </div>
  <div class="hover-info-square" id="hoverInfoSquare">
    <img id="hoverPortrait" src="" alt="" />
    <div class="hover-info-content">
      <h4 id="hoverName"></h4>
      <p id="hoverRole"></p>
      <p id="hoverBio"></p>
    </div>
  </div>
</Base>

<script define:vars={{ allPeople }}>
  // Prevent browser back navigation on horizontal scroll
  document.addEventListener("DOMContentLoaded", () => {
    const postScrolls = document.querySelectorAll(".post-scroll");

    postScrolls.forEach((scrollArea) => {
      let startX = 0;
      let isScrolling = false;

      // Track touch/mouse start position
      scrollArea.addEventListener(
        "touchstart",
        function (e) {
          startX = e.touches[0].clientX;
          isScrolling = true;
        },
        { passive: false }
      );

      scrollArea.addEventListener("mousedown", function (e) {
        startX = e.clientX;
        isScrolling = true;
      });

      // Handle touch move
      scrollArea.addEventListener(
        "touchmove",
        function (e) {
          if (!isScrolling) return;

          const touchX = e.touches[0].clientX;
          const scrollLeft = scrollArea.scrollLeft;

          // If at the left edge and trying to scroll further left
          if (scrollLeft <= 0 && touchX > startX) {
            e.preventDefault(); // Prevent the browser back navigation
          }
        },
        { passive: false }
      );

      // Reset on end of interaction
      const endScroll = function () {
        isScrolling = false;
      };

      scrollArea.addEventListener("touchend", endScroll);
      scrollArea.addEventListener("mouseup", endScroll);
      scrollArea.addEventListener("mouseleave", endScroll);

      // Also prevent wheel overscroll
      scrollArea.addEventListener(
        "wheel",
        function (e) {
          const scrollLeft = scrollArea.scrollLeft;

          // If at the left edge and trying to scroll further left with wheel
          if (scrollLeft <= 0 && e.deltaX < 0) {
            e.preventDefault();
          }
        },
        { passive: false }
      );
    });

    // Block history navigation from swipe gestures
    window.addEventListener("popstate", function (e) {
      // Check if the navigation was triggered by a gesture from our scroll area
      if (e.isTrusted && document.activeElement?.closest(".post-scroll")) {
        history.pushState("", "", window.location.href);
      }
    });

    // Enhanced hover interaction for people lists
    const personItems = document.querySelectorAll(".research-network li, .core-team li, .advisors li");
    const hoverSquare = document.getElementById("hoverInfoSquare");
    const hoverName = document.getElementById("hoverName");
    const hoverRole = document.getElementById("hoverRole");
    const hoverBio = document.getElementById("hoverBio");
    const hoverPortrait = document.getElementById("hoverPortrait");
    let hideTimeout;

    // Create a map for quick lookup
    const peopleMap = {};
    if (allPeople) {
      allPeople.forEach((person) => {
        peopleMap[person.id] = person.data;
      });
    }

    personItems.forEach((item) => {
      item.addEventListener("mouseenter", () => {
        clearTimeout(hideTimeout);

        const personId = item.getAttribute("data-person-id");
        if (personId && peopleMap[personId]) {
          const personData = peopleMap[personId];

          hoverName.textContent = personData.name;
          hoverRole.textContent = personData.role;
          hoverBio.textContent = personData.bio;

          if (personData.portrait) {
            hoverPortrait.src = personData.portrait;
            hoverPortrait.alt = `Portrait of ${personData.name}`;
            hoverPortrait.style.display = "block";
          } else {
            hoverPortrait.style.display = "none";
          }
        } else {
          // Fallback for legacy items without data
          hoverName.textContent = item.textContent.trim();
          hoverRole.textContent = "";
          hoverBio.textContent = "";
          hoverPortrait.style.display = "none";
        }

        hoverSquare.classList.add("active");
        hoverSquare.classList.remove("fade-out");
      });

      item.addEventListener("mouseleave", () => {
        hoverSquare.classList.add("fade-out");
        hideTimeout = setTimeout(() => {
          hoverSquare.classList.remove("active");
        }, 128);
      });
    });
  });
</script>
